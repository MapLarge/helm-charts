##################################
# 1. App information             #
##################################

image:
  # -- Image pull policy
  # @section -- Image Information
  pullPolicy: IfNotPresent
  # -- Secret to create or use to pull the docker image from the registry
  # @section -- Image Information
  pullSecretName: maplarge-dockerhub-pull-secret
  # -- The fully qualified repository where the MapLarge image should be pulled from
  # @section -- Image Information
  repository: docker.io/maplarge/server-netcore-dev
  # -- The MapLarge image tag to pull
  # @section -- Image Information
  tag:

license:
  # -- A secret name for an existing license secret. If creating your own license secret, the key must be "_maplarge_license.lic"
  # @section -- License
  existingSecretName:
  # -- The content of the MapLarge license if one has been provided to you
  # @section -- License
  license:


# -- replicas The number of replicas to create in the StatefulSet. Defaults to 1. Has no effect if horizontal pod autoscaling is enabled.
# @section -- General
replicas: 3

# When set to `true`, `config.json` will be saved to `App_Data/config`.
# When set to `false`, all configuation must be set by environment variables, mapped from a `ConfigMap` or otherwise managed by the administrator and mounted to the location `/opt/maplarge/config/config.json` (by default)
# -- persistConfiguration Determines how MapLarge configurations are to be persisted in the deployment
# @ignore
persistConfiguration: false
# -- podAnnotations Extra annotations to add to your pods' metadata. Usually unnecessary.
# @section -- General
podAnnotations: {}
# Example:
#   maplarge-version: 4.95.0

# Limits are enforced by Kubernetes. If you exceed memory limit, your container may be killed without warning.
# Requests must be less than or equal to limits. Usually set them equal to limits.
resources:
  limits:
    # -- The CPU Limit to set for the pod
    # @section -- Deployment Resources
    cpu: 4
    # -- The Memory Limit to set for the pod
    # @section -- Deployment Resources
    memory: 8Gi
  requests:
    # -- The CPU Request to set for the pod
    # @section -- Deployment Resources
    cpu: 1
    # -- The Memory Request to set for the pod
    # @section -- Deployment Resources
    memory: 4Gi


# -- appDataVolumeSizeInGB Requested size of PVC to be created.
# @section -- Storage Information
appDataVolumeSizeInGB: 100

# -- appDataVolumeStorageClassName Requested storage class name.
# @section -- Storage Information
appDataVolumeStorageClassName: openebs-hostpath

# -- If set, the root password will be set according to this value, otherwise a default value is created
# @section -- MapLarge Configuration
rootPassword:

# -- If set, defines the name of the secret for the root password
# @section -- MapLarge Configuration
rootPasswordSecretName:

# -- An existing secret that contains a value that will be used as the root password; the key must be set to `rootPassword`
# @section -- MapLarge Configuration
existingRootPasswordSecretName:

# Some MapLarge configurations can be controlled via environment variables. These
# can be set here.
# -- A map of extra environment variables to be added to the MapLarge container
# @section -- MapLarge Configuration
environmentVariables:
  - name: ML_STDERR_LOG_LEVEL
    value: "2"
  - name: ml_cfg_homepageRedirect
    value: "dashboard"

# -- Allows for custom configurations for the js.js. This value is read in as-is, so each js.js option needs to be on it's own line.
# @section -- MapLarge Configuration
jsjs:
  value: |

# -- Allows for custom configurations for the MapLarge config.json.
# @section -- MapLarge Configuration
config:
  # Used for an InitContainer when MapLarge Notebooks are enabled.
  # This can be changed to any image desired as the initContainers
  # are only running simple shell commands
  # workloadSchedulerScratchImage: "busybox"

serviceAccount:
  # -- Specificies whether a service account should be created. If the deploying user does not have permissions to create an SA, then this value should be set to false.
  # @section -- General
  create: false
  # -- To use an existing service account, provide the name here. If not set and create is true, a name is generated using the maplarge.name template.
  # @section -- General
  name: ""

# -- Set to true if you want to prefer that your replicas are placed on distinct nodes.
# @section -- General
preferNodeAntiAffinity: false

# -- Set to true if you want to REQUIRE that your replicas are placed on different nodes.
# @section -- General
requireNodeAntiAffinity: true

# -- (map) extraLabels Extra labels to apply to all resources
# @section -- General
extraLabels: {}
# Example:
# extraLabels:
#   testing: 123

# -- extraVolumes Specify any extra list of additional volumes for MapLarge
# @section -- General
extraVolumes: []
# Example:
#   extraVolumes: |
#   - name: extra-config
#     configMap:
#       name: test-config-map

# -- extraVolumeMounts Specify any extra list of additional volumeMounts for MapLarge
# @section -- General
extraVolumeMounts: []
# Example:
#   extraVolumeMounts: |
#   - mountPath: /maplarge/
#     name: extra-config
#     subPath: ml-config.extra.yaml

# --  JSON object used to pre-populate intercluster sync settings
# @ignore
interClusterConfigJson:

# -- Extra configuration options for cluster.json
# @section -- General
clusterConfig:

# -- useTransactionalDatabase NEED DEFINITION
# @ignore
useTransactionalDatabase: true

# -- updateStrategyType RollingUpdate (default) or OnDelete (will only update when you delete pod)
# @ignore
updateStrategyType: RollingUpdate

# -- podManagementPolicy Parallel (default) or OrderedReady
# @ignore
podManagementPolicy: Parallel

# -- revisionHistoryLimit
# @ignore
revisionHistoryLimit: 10

# -- terminationGracePeriodSeconds How long to wait for graceful exit
# @ignore
terminationGracePeriodSeconds: 120

# -- terminationMessagePath
# @ignore
terminationMessagePath: /dev/termination-log

# -- terminationMessagePolicy
# @ignore
terminationMessagePolicy: File

# -- Sets a simple toleration for the MapLarge pod
# @section -- General
simpleTolerations: []
# Example:
# - MapLargeReserved

# -- Sets the tolerations for the MapLarge pod
# @section -- General
tolerations: {}

# -- Sets simple node affinity preferences for the MapLarge pod
# @section -- General
simpleNodeAffinityPreferences: []
# Example:
# - SmallNode

# --  Sets the node affinity preferences for the MapLarge pod
# @section -- General
nodeAffinityPreferences: []

# -- Sets the node selector for the MapLarge pod
# @section -- General
nodeSelector: {}

# -- Sets the simpleNodeAffinityRequirements for the pod
# @section -- General
simpleNodeAffinityRequirements: []
# Example:
# - SpecialNode

# -- Sets the nodeAffinityRequirements for the pod
# @section -- General
nodeAffinityRequirements: []

# --  Sets the podSecurityContext
# @section -- General
podSecurityContext: {}
# Example:
#   runAsUser: 1000
#   runAsGroup: 3000
#   fsGroup: 2000


# --  Sets the securityContext
# @section -- General
securityContext: {}
# Example:
#   capabilities:
#     add: ["NET_ADMIN", "SYS_TIME"]
#   allowPrivilegeEscalation: false

# -- this will create your pull secret for you. Required fields are registry, username, password, and email
# @section -- Docker configurations
dockerCredentials: {}
# Example:
#   registry: docker.io
#   username: dockerhubusername
#   password: dockerhubpassword
#   email: dockerhub@emailaddress.com



# This configuration allows the pod ten seconds to sixty minutes to become ready on startup.
startupProbe:
  # -- Endpoint for the startup probe
  # @section -- Probe Configurations
  httpGet:
    path: /Cluster/IsReady
    # -- Port for the startup probe
    # @section -- Probe Configurations
    port: "http"
    # -- Scheme for the startup probe
    # @section -- Probe Configurations
    scheme: HTTP
  # -- Failure threshold for startupProbe
  # @section -- Probe Configurations
  failureThreshold: 360
  # -- Period seconds for startupProbe
  # @section -- Probe Configurations
  periodSeconds: 10

livenessProbe:
  httpGet:
    # -- Endpoint for the livenessProbe
    # @section -- Probe Configurations
    path: /Cluster/IsAlive
    # -- Port for the livenessProbe
    # @section -- Probe Configurations
    port: "http"
    # -- Scheme for the livenessProbe
    # @section -- Probe Configurations
    scheme: HTTP
  # -- Failure threshold for livenessProbe
  # @section -- Probe Configurations
  failureThreshold: 6
  # -- Initial delay seconds for livenessProbe
  # @section -- Probe Configurations
  initialDelaySeconds: 0
  # -- Period seconds for livenessProbe
  # @section -- Probe Configurations
  periodSeconds: 5
  # -- Success Threshold for livenessProbe
  # @section -- Probe Configurations
  successThreshold: 1
  # -- Timeout seconds for livenessProbe
  # @section -- Probe Configurations
  timeoutSeconds: 2

readinessProbe:
  httpGet:
    # -- Endpoint for the readinessProbe
    # @section -- Probe Configurations
    path: /Cluster/IsReadyForUser
    # -- Port for the readinessProbe
    # @section -- Probe Configurations
    port: "http"
    # -- Scheme for the readinessProbe
    # @section -- Probe Configurations
    scheme: HTTP
  # -- Failure threshold for readinessProbe
  # @section -- Probe Configurations
  failureThreshold: 3
  # -- Initial delay seconds for readinessProbe
  # @section -- Probe Configurations
  initialDelaySeconds: 0
  # -- Period seconds for readinessProbe
  # @section -- Probe Configurations
  periodSeconds: 5
  # -- Success Threshold for readinessProbe
  # @section -- Probe Configurations
  successThreshold: 2
  # -- Timeout seconds for readinessProbe
  # @section -- Probe Configurations
  timeoutSeconds: 2


notebooks:
  # -- Enables MapLarge Notebooks and creates the necessary Service Account, Role and RoleBinding
  # @section -- Notebook configurations
  enabled: false
  # -- A list of Notebook specific js.js configurations to add to the default js.js
  # @section -- Notebook configurations
  jsjs:
    value: |
      ml.config.enableProjects = true;
      ml.config.enableNotebooks = true;
  # -- A list of environment variables that may need to be added to MapLarge for a Notebook deployment
  # @section -- Notebook configurations
  environmentVariables: []

## Database preload configurations
# -- preloadMLData.enabled Enables MapLarge to preload data from a remote docker image
# -- preloadMLData.image.pullPolicy Sets the image pull policy for the preload data image
# -- preloadMLData.image.repository The docker image containing the preload data required
# -- preloadMLData.image.tag The docker tag of the image preload docker image
# @ignore
preloadMLData:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    repository: docker.io/maplarge/data-snapshots
    tag: 1-3-2022_4_10

service:
  # -- If the MapLarge container is configured to serve requests on a port other than 80, define it here
  # @section -- General
  targetPort: 80

# Enables LTE ports and LoadBalancer, and specifies a MetalLB address pool to use
# @ignore
lte:
  enabled: false
  metalLbAddressPool: "default"
  # Options Cluster or Local https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
  # Cluster has better loadbalancing but the client IP address is hidden from app, but for LTE services it is usually
  # more desirable to get the client's IP address
  trafficPolicy: Local

# -- Rarely there is a time when you need to set the MapLarge hostname to something other than the ingress hostname, but if you do have that scenario, you can provide a hostname here to override the value that will be derived from the ingress.hosts[0].basehostname. Note, this does not modify the ingress hostname value.
# @section -- Ingress Configuration
hostnameOverride:


# Specifies an authentication plugin
authPlugin:
  # -- Determines if the authPlugin should be enabled
  # @section -- MapLarge Configuration
  enabled: false
  # -- Specifies the MapLarge authPlugin to use
  # @section -- MapLarge Configuration
  typeName:
  # -- Specifices the path in the container where the authPlugin configuration file can be found. Can be left blank.
  # @section -- MapLarge Configuration
  filename:

ingress:
  # -- Enable ingress object
  # @section -- Ingress Configuration
  enabled: true
  # -- Ingress class to use
  # @section -- Ingress Configuration
  class: nginx-internal
  # -- Annotations to set on the ingress object
  # @section -- Ingress Configuration
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 2000m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  hosts:
    # Usually you only need one host here, but this is an array field and accepts multiple values.
    # -- Custom DNS name where MapLarge can be reached
    # @section -- Ingress Configuration
    - baseHostname: customer-a.dev.maplarge.net
    # -- The number of dns prefixes to create
    # @section -- Ingress Configuration
      prefixes: 8
      tls:
        # -- Controls if the site is TLS protected
        # @section -- Ingress Configuration
        enabled: true
        # -- The TLS secret to use if TLS protected
        # @section -- Ingress Configuration
        secretName: wildcard-dev-maplarge-net-tls-secret

#
# -- Content Security Policy settings and overrides, if needed for an ingress object.
# Will be processed with baseHostName to generate correct policy
# @section -- Ingress Configuration
contentSecurityPolicy:
  enabled: true
  defaultSrc: ""
  scriptSrc: ""
  styleSrc: ""
  frameSrc: ""
  frameAncestors: ""
  imgSrc: ""
  mediaSrc: ""
  fontSrc: ""


